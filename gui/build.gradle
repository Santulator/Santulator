/*
 * Open Source Software published under the Apache Licence, Version 2.0.
 */

plugins {
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.14'
}

mainClassName = "io.github.santulator.gui.main.SantulatorGuiExecutable"

applicationName = "Santulator"

ext.buildTimestamp = new Date().format('yyyy-MM-dd HH:mm:ss')

processResources {
    filesMatching('properties/*.properties') {
        expand(
            buildVersion: project.property("version"),
            buildTimestamp: project.buildTimestamp
        )
    }
}

dependencies {
    implementation project(':core')
    implementation ('com.gluonhq:ignite-guice:1.2.2') {
        exclude group: 'com.google.inject', module: 'guice'
    }
    implementation 'org.controlsfx:controlsfx:11.1.2'

    // This is required for the conditional logic in the logback setup
    runtimeOnly 'org.codehaus.janino:janino:3.1.9'

    testImplementation project(':test-utils')
    testImplementation 'org.testfx:testfx-junit5:4.0.18'
    testImplementation 'org.hamcrest:hamcrest:3.0'
    testImplementation 'ch.qos.logback:logback-classic:1.4.8'

    testRuntimeOnly 'commons-io:commons-io:2.13.0'
    testRuntimeOnly 'org.testfx:openjfx-monocle:jdk-12.0.1+2'
}

javafx {
    modules = [
        'javafx.controls', 'javafx.fxml'
    ]
    version = '17.0.2'
}

test {
    if (project.hasProperty("skipGuiTests")) {
        exclude 'io/github/santulator/gui/main/GuiTest*'
    }
    if (!project.hasProperty("noHeadless")) {
        jvmArgs "-Dheadless=true"
    }
}

task copyDependencies(type: Copy) {
    from configurations.runtimeClasspath
    from jar
    exclude "javafx-*.jar"
    into "${buildDir}/libraries"
}

task copyJavafxModules(type: Copy) {
    from configurations.runtimeClasspath
    include "javafx-*${javafx.platform.classifier}.jar"
    into "${buildDir}/javafx-modules"
}
