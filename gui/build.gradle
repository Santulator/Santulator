/*
 * Open Source Software published under the Apache Licence, Version 2.0.
 */
import org.apache.tools.ant.filters.*

plugins {
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.7'
}

mainClassName = "io.github.santulator.gui.main.SantulatorGuiExecutable"

applicationName = "Santulator"

ext.buildTimestamp = new Date().format('yyyy-MM-dd HH:mm:ss')

processResources {
    filesMatching('properties/*.properties') {
        filter ReplaceTokens, tokens: [
                'build.version': project.property("version"),
                'build.timestamp': project.buildTimestamp
        ]
    }
}

jar {
    from(buildDir) {
        include 'build-info.properties'
    }
}

def platform
if (operatingSystem.isWindows()) {
    platform = 'win'
} else if (operatingSystem.isLinux()) {
    platform = 'linux'
} else if (operatingSystem.isMacOsX()) {
    platform = 'mac'
}

configurations {
    javafxCompile
}

dependencies {
    compile project(':core')
    compile 'com.gluonhq:ignite-guice:1.0.2'
    compile 'org.controlsfx:controlsfx:9.0.0'

    // This is required for the conditional logic in the logback setup
    runtime 'org.codehaus.janino:janino:3.0.12'

    testCompile project(':test-utils')
    testCompile 'org.testfx:testfx-core:4.0.15-alpha'

    testRuntime 'commons-io:commons-io:2.6'
    testRuntime 'org.testfx:openjfx-monocle:jdk-11+26'
}

javafx {
    modules = [
        'javafx.controls', 'javafx.fxml'
    ]
}

test {
    if (project.hasProperty("skipGuiTests")) {
        exclude 'io/github/santulator/gui/main/GuiTest*'
    }
    if (!project.hasProperty("noHeadless")) {
        jvmArgs "-Dheadless=true"
    }
}

run {
    jvmArgs += [
        '--add-exports', 'javafx.base/com.sun.javafx.runtime=ALL-UNNAMED',
        '--add-exports', 'javafx.graphics/com.sun.javafx.css=ALL-UNNAMED'
    ]
}

task copyDependencies(type: Copy) {
    from configurations.runtime
    from jar
    into "${buildDir}/libraries"
}

task copyJavafxModules(type: Copy) {
    from configurations.runtimeClasspath
    include "javafx*${javafx.platform.classifier}.jar"
    into "${buildDir}/javafx-modules"
}
